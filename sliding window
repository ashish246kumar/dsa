Longest-substring-without-repeating-characters

*********
class Solution {
    public int lengthOfLongestSubstring(String s) {
        HashSet<Character> h=new HashSet<>();
        int left=0,right=0,n=s.length()-1,maxlen=0;
        while(right<=n){
            char c=s.charAt(right);
            if(h.contains(c)){
                while(h.contains(s.charAt(right))){
                    h.remove(s.charAt(left));
                    left++;
                }
              h.add(c);
             
               
                
            }
           else{
             h.add(c);
              maxlen=Math.max(h.size(),maxlen);
                
           }
            right++;
            
        }
        return maxlen;

    }
*********


******************************************
max-consecutive-ones-iii
**********

class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        n=len(nums)
        left=0
        right=0
        zero=0
        maxlen=0
        while(right<n):
            if nums[right]==0:
                zero+=1
            while(zero>k):
                if nums[left]==0:
                    zero-=1
                left+=1    

            maxlen=max(maxlen,right-left+1)  
            right+=1  
          
        return maxlen          
**********************************************************


        
